// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mqttclient.proxies;

public class Subscription
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject subscriptionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MqttClient.Subscription";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Host("Host"),
		Port("Port"),
		TopicName("TopicName"),
		OnMessageMicroflow("OnMessageMicroflow");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Subscription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MqttClient.Subscription"));
	}

	protected Subscription(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject subscriptionMendixObject)
	{
		if (subscriptionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MqttClient.Subscription", subscriptionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MqttClient.Subscription");

		this.subscriptionMendixObject = subscriptionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Subscription.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static mqttclient.proxies.Subscription initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mqttclient.proxies.Subscription.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mqttclient.proxies.Subscription initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mqttclient.proxies.Subscription(context, mendixObject);
	}

	public static mqttclient.proxies.Subscription load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mqttclient.proxies.Subscription.initialize(context, mendixObject);
	}

	public static java.util.List<mqttclient.proxies.Subscription> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mqttclient.proxies.Subscription> result = new java.util.ArrayList<mqttclient.proxies.Subscription>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MqttClient.Subscription" + xpathConstraint))
			result.add(mqttclient.proxies.Subscription.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Host
	 */
	public final java.lang.String getHost()
	{
		return getHost(getContext());
	}

	/**
	 * @param context
	 * @return value of Host
	 */
	public final java.lang.String getHost(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Host.toString());
	}

	/**
	 * Set value of Host
	 * @param host
	 */
	public final void setHost(java.lang.String host)
	{
		setHost(getContext(), host);
	}

	/**
	 * Set value of Host
	 * @param context
	 * @param host
	 */
	public final void setHost(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String host)
	{
		getMendixObject().setValue(context, MemberNames.Host.toString(), host);
	}

	/**
	 * @return value of Port
	 */
	public final java.lang.Long getPort()
	{
		return getPort(getContext());
	}

	/**
	 * @param context
	 * @return value of Port
	 */
	public final java.lang.Long getPort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Port.toString());
	}

	/**
	 * Set value of Port
	 * @param port
	 */
	public final void setPort(java.lang.Long port)
	{
		setPort(getContext(), port);
	}

	/**
	 * Set value of Port
	 * @param context
	 * @param port
	 */
	public final void setPort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long port)
	{
		getMendixObject().setValue(context, MemberNames.Port.toString(), port);
	}

	/**
	 * @return value of TopicName
	 */
	public final java.lang.String getTopicName()
	{
		return getTopicName(getContext());
	}

	/**
	 * @param context
	 * @return value of TopicName
	 */
	public final java.lang.String getTopicName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TopicName.toString());
	}

	/**
	 * Set value of TopicName
	 * @param topicname
	 */
	public final void setTopicName(java.lang.String topicname)
	{
		setTopicName(getContext(), topicname);
	}

	/**
	 * Set value of TopicName
	 * @param context
	 * @param topicname
	 */
	public final void setTopicName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String topicname)
	{
		getMendixObject().setValue(context, MemberNames.TopicName.toString(), topicname);
	}

	/**
	 * @return value of OnMessageMicroflow
	 */
	public final java.lang.String getOnMessageMicroflow()
	{
		return getOnMessageMicroflow(getContext());
	}

	/**
	 * @param context
	 * @return value of OnMessageMicroflow
	 */
	public final java.lang.String getOnMessageMicroflow(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.OnMessageMicroflow.toString());
	}

	/**
	 * Set value of OnMessageMicroflow
	 * @param onmessagemicroflow
	 */
	public final void setOnMessageMicroflow(java.lang.String onmessagemicroflow)
	{
		setOnMessageMicroflow(getContext(), onmessagemicroflow);
	}

	/**
	 * Set value of OnMessageMicroflow
	 * @param context
	 * @param onmessagemicroflow
	 */
	public final void setOnMessageMicroflow(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String onmessagemicroflow)
	{
		getMendixObject().setValue(context, MemberNames.OnMessageMicroflow.toString(), onmessagemicroflow);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return subscriptionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mqttclient.proxies.Subscription that = (mqttclient.proxies.Subscription) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MqttClient.Subscription";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
